---
apiVersion: v1
kind: Namespace
metadata:
  name: firstapp-volumes
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: firstapp-volumes
  namespace: firstapp-volumes
  labels:
    app: firstapp-volumes
spec:
  replicas: 1
  selector:
    matchLabels:
      app: firstapp-volumes
  template:
    metadata:
      labels:
        app: firstapp-volumes
    spec:
      volumes:
        - name: nfs-volume
          nfs:
            server: nfs.dns.local
            path: /var/nfs
      containers:
      - name: firstapp-volumes
        image: docker.io/alexwhen/docker-2048:latest
        ports:
        - containerPort: 80
          name: http
        readinessProbe:
          httpGet:
            path: /
            port: 80
          initialDelaySeconds: 5
          periodSeconds: 5
          successThreshold: 1
---
apiVersion: v1
kind: Service
metadata:
    name: volumes-service
    namespace: firstapp-volumes
spec:
    selector:
      app: firstapp-volumes
    ports:
    - name: http
      protocol: TCP
      port: 80
      targetPort: 80
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: volumes-ingress
  namespace: firstapp-volumes
  labels:
    app: firstapp-volumes
spec:
  rules:
  - host: master-k8s-imv.westeurope.cloudapp.azure.com
    http:
      paths:
      - path: /
        pathType: "Prefix"
        backend:
          service:
            name: volumes-service
            port:
              number: 80
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
  namespace: firstapp-volumes
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /srv/nfs
    server: nfs.dns.local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
  namespace: firstapp-volumes
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: haproxy-configmap
  namespace: firstapp-volumes
data:
  servers-increment: "42"
  ssl-redirect: "OFF"
---
apiVersion: v1
kind: PersistentVolume
metadata:
  name: nfs-pv
  namespace: firstapp-volumes
spec:
  capacity:
    storage: 10Gi
  volumeMode: Filesystem
  accessModes:
    - ReadWriteMany
  persistentVolumeReclaimPolicy: Recycle
  storageClassName: nfs
  mountOptions:
    - hard
    - nfsvers=4.1
  nfs:
    path: /srv/nfs
    server: nfs.dns.local
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: nfs-pvc
  namespace: firstapp-volumes
spec:
  storageClassName: nfs
  accessModes:
    - ReadWriteMany
  resources:
    requests:
      storage: 2Gi
